body {
  --alrite-rgb: 111, 195, 135;
  --alrite-green: #6FC387;

  --light-green: #E5F1E8;
  --dark-green: #27442F;

  --light-border: #E2E2E2;
  --dark-border: #909090;
  --light-background: #FBFBFB;
  --near-black: #262626;
  --warning-orange: #ED6F2E;

  margin: 0;
  /* padding-bottom: 10vh; */
  display: flex;
  flex-direction: row;
  align-items: center;
  overflow-y: scroll;
  min-height: 100vh;
}

.do-transition {
  transition: background-color 0.5s ease;
}

body,
button,
input,
option,
select,
textarea {
  font-family: 'Poppins', sans-serif;
}

h1,
h2 {
  white-space: nowrap;
  margin: 0;
  color: var(--near-black);
  transition: color 0.5s ease;
}

h1 {
  font-size: 24px;
  font-weight: 400;
}

h2 {
  font-weight: 300;
}

h3 {
  text-align: center;
  margin-top: 0;
  font-weight: 400;
}

button,
input,
option,
select {
  font-weight: 200;
}

input:focus-visible {
  outline-color: var(--alrite-green);
}

textarea {
  min-width: 65%;
  font-weight: lighter;
  font-size: 13px;
}

input {
  min-width: 50%;
}

button {
  border: none;
  border-radius: 3px;
  color: white;
  transition: background-color 0.5s ease, opacity 0.5s ease;
  background-color: var(--light-border);
}

.selected button {
  background-color: var(--near-black);
}

.selected button:hover {
  cursor: pointer;
  background-color: var(--alrite-green);
}

.page-card-label h2 {
  font-size: 16px;
  opacity: 0.5;
}

.settings-card h1,
.component-card h1 {
  font-size: 20px;
  opacity: 0.85;
}

.settings-card h2,
.component-card h2 {
  font-size: 12px;
  opacity: 0.35;
}

.settings-card,
.component-card:not(.new-component-card) {
  white-space: nowrap;
  animation: fade-in forwards 1s ease;
}

.settings-card-fields,
.component-card-fields {
  opacity: 0;
  max-height: 0;
  overflow: hidden;
  margin-top: 0;
  transition: opacity 0.5s ease, max-height 0.5s ease, margin-top 0.5s ease;
}

.selected .settings-card-fields,
.selected .component-card-fields {
  opacity: 1;
  max-height: 100vh;
  margin-top: 10px;
}

.page-card {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;

  padding: 10px 20px;
  flex-basis: 300px;
  flex-shrink: 0;
  height: calc(100vh - 20px);
  transition: flex-basis 0.5s ease, padding 0.5s ease;
  animation: fade-in forwards 1s ease;
}

.page-card.selected {
  flex-basis: 550px;
  /* padding: 10px 30px; */
}

.card {
  background-color: var(--light-background);
  border: 3px solid var(--light-border);
  border-radius: 10px;
  padding: 15px 10px;
  margin-bottom: 10px;
  width: 100%;

  color: var(--near-black);
  transition: border 0.5s ease, background-color 0.5s ease, outline 0.5s ease;
  outline: 2px solid transparent;
}

.selected .card {
  background-color: var(--light-green);
  border: 3px solid var(--alrite-green);
}

.selected .card-subcomponents {
  background-color: rgba(var(--alrite-rgb), 0.1);
}

.selected .card.card-subcomponents:focus-within,
.selected .card.component-card:not(.new-component-card):focus-within {
  outline: 2px solid var(--dark-green);
}

.new-component-card {
  animation: pulse 1s;
  box-shadow: 0 0 0.1em 1em transparent;
}

@keyframes pulse {
  0% {
    box-shadow: 0 0 0 0 rgba(var(--alrite-rgb), 0.75);
  }
}

.component-card-header {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: flex-start;
  transition: background-color 0.5s ease;
}

.card.component-card>.component-card-header {
  cursor: grab;
}

.page-card-header {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  cursor: pointer;
}

.page-card:not(.selected) .page-card-header:hover {
  border-color: var(--dark-border);
}

.card-buttons-container {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
}

.card-button {
  width: 30px;
  height: 30px;
  margin-left: 5px;
  cursor: pointer;
  transition: opacity 0.5s ease, background-color 0.5s ease;
}

.info-button {
  width: 1em;
  height: 1em;
  margin-left: auto;
  margin-right: 5px;
  cursor: help;
  background-color: var(--near-black);
  border-radius: 50%;
}

.info-button:hover {
  background-color: var(--alrite-green);
}

.goto-button {
  margin-left: 5px;
}

.add-subcomponent-button {
  width: 35px;
  height: 35px;
  margin: 10px 0 10px 50%;
  transform: translateX(-50%);
  transition: opacity 0.5s ease, margin 0.5s ease;
}

.page-card:not(.selected) .add-subcomponent-button {
  margin: 5px 0 5px 50%;
}

.page-card-label {
  margin-right: 25px;
  transition: margin 0.5s ease;
}

.selected>.page-card-label {
  margin-right: 50px;
}

.disabled,
.multiselect .prop-link,
.multiselect .prop-link+.goto-button,

.diagnosis-page .add-component-button,
.diagnosis-page .prop-defaultLink,
.diagnosis-page .prop-defaultLink+.goto-button,

.page-card:not(.selected) .drop-down,
.page-card:not(.selected) .drop-down {
  pointer-events: none;
  opacity: 0.5;
}

.page-card:not(.selected) .add-component-button,
.page-card:not(.selected) .add-subcomponent-button,
.page-card:not(.selected) .delete-component-button {
  pointer-events: none;
  opacity: 0.2;
}

.prop-input {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  margin: 5px 5px;
}

.prop-input::before {
  content: var(--label) "*: ";
  opacity: 0.85;
  transition: color 0.5s ease;
}

.prop-input.optional::before {
  content: var(--label) ": ";
  opacity: 0.55;
}

.add-component-button {
  padding-bottom: 50px;
}

.add-component-button,
.drop-down {
  transition: opacity 0.5s ease;
}

/* .drop-down {
  Would have this but on stupid firefox this messes up
  the other drop-down styles... 
  border-radius: 5px;
} */

.add-component-button,
.add-button {
  cursor: pointer;
}

.card-subcomponents {
  width: unset;
  margin-top: 10px;
  margin-bottom: 0;
  padding: 0 10px;
  display: flex;
  flex-direction: column;
}

.sub-card {
  margin-top: 10px;
  margin-bottom: 10px;
}

/* ============= */
/* HOVER TOOLTIP */

#tooltip {
  content: var(--label);
  color: var(--near-black);
  background-color: var(--light-border);
  border: 1px solid var(--near-black);
  border-radius: 5px;
  padding: 5px 10px;
  font-size: 14px;
  position: fixed;
  z-index: 1;
  pointer-events: none;
  opacity: 0;
  /* transform: scale(0.95); */
  transition: opacity 0.25s ease, transform 0.25s ease;
  /* white-space: nowrap; */
  width: fit-content;
  max-width: 30em;
}

#tooltip.active {
  opacity: 1;
  transform: scale(1);
}

.tooltip {
  color: var(--alrite-green);
  margin: 0;
}

/* HOVER TOOLTIP */
/* ============= */

/* ============ */
/* INVALID PROP */

.validation-invalid.settings-card,
.validation-invalid.component-card {
  outline: 3px solid var(--warning-orange) !important;
}

.validation-invalid.prop-input>select,
.validation-invalid.prop-input>input {
  outline: 3px solid var(--warning-orange) !important;
  border-radius: 3px;
}

.validation-invalid.prop-input::before {
  color: var(--warning-orange) !important;
}

.validation-invalid.prop-input {
  position: relative;
  margin-bottom: 35px;
}

.validation-invalid.prop-input::after {
  content: var(--error-message);
  color: var(--warning-orange);
  position: absolute;
  bottom: -25px;
  right: 0;
}

/* INVALID PROP */
/* ============ */

/* ============= */
/* SLIDER BUTTON */
.slider-button {
  --color: var(--light-border);
  cursor: pointer;
  position: relative;
  width: 50px;
  height: 22px;
  border-radius: 22px;
  background-color: var(--color);
  transition: background-color 0.5s ease;
}

.slider-button.active {
  --color: var(--alrite-green);
}

.slider-knob {
  position: absolute;
  top: 0;
  left: 0;
  width: 22px;
  height: 22px;
  border-radius: 11px;
  border: 4px solid var(--color);
  box-sizing: border-box;
  background-color: white;
  transition: border 0.5s ease, left 0.5s ease;
}

.active .slider-knob {
  left: 26px;
}

/* SLIDER BUTTON */
/* ============= */

#add-page-button {
  cursor: pointer;
  padding-left: 12.5vw;
  padding-right: 12.5vw;
  animation: fade-in forwards 1s ease;
}

.page-card.selected .card-button>circle {
  fill: var(--near-black)
}

.card-button>circle,
.add-button circle {
  fill: var(--light-border);
}

.page-card .card-button>circle,
.add-button circle {
  transition: fill 0.5s ease
}

.page-card .card-button:hover>circle,
.add-button:hover circle {
  fill: var(--alrite-green)
}

.diagnosis-page .component-card {
  display: none;
}

/* ============ */
/* UTIL SECTION */

#utility-section {
  position: fixed;
  bottom: 10px;
  right: 10px;
  padding: 6.5px 5px;
  display: flex;
  flex-direction: row-reverse;
  align-items: center;
  border-radius: 10px;
  border: 3px solid var(--light-border);
  --bounce: cubic-bezier(.47, 1.64, .41, 1);
  transition: border 0.5s var(--bounce), background-color 0.5s ease;
}

#utility-section,
#go-back-button,
#toggle-menu-button {
  background-color: white;
}

#utility-section.minimized {
  border-color: transparent;
  background-color: transparent;
  --bounce: cubic-bezier(.47, .18, .49, -0.61);
}

#utility-section::before {
  content: var(--workflow-name);
  position: absolute;
  bottom: 100%;
  right: 12.5px;
  color: var(--dark-green);
  white-space: nowrap;
  text-shadow:
    1px 1px 0 whitesmoke,
    1px -1px 0 whitesmoke,
    -1px 1px 0 whitesmoke,
    -1px -1px 0 whitesmoke;
}

.util-button {
  width: 40px;
  height: 40px;
  margin: 0 3px 1px;
  cursor: pointer;
  --bounce: cubic-bezier(.47, 1.64, .41, 1);
  --no-over-bounce: cubic-bezier(.47, 1.48, .41, .8);
  transition: transform 0.1s ease,
  border 0.5s ease,
    opacity 0.5s var(--bounce),
    width 0.5s var(--bounce),
    height 0.5s var(--no-over-bounce);
  border: 2px solid transparent;
  border-radius: 8px;
}

.minimized .util-button:not(#toggle-menu-button) {
  width: 0px;
  height: 0px;
  opacity: 0;
}

.minimized .util-button {
  --bounce: cubic-bezier(.47, .18, .49, -0.61);
  --no-over-bounce: cubic-bezier(.45, .22, .51, -0.53);
}

.do-transition #go-back-button,
.do-transition #toggle-menu-button {
  transition: transform 0.1s ease,
    background-color 0.5s ease,
    border 0.5s ease;
}

#go-back-button {
  position: fixed;
  bottom: 15px;
  left: 15px;
}

.needs-dark-fill {
  transition: fill 0.5s ease
}

.darkMode .needs-dark-fill {
  fill: #4B7557
}

.util-button:hover {
  border: 2px solid var(--alrite-green)
}

#dark-mode-button.hidden,
#light-mode-button.hidden,
.util-button:active {
  border: 2px solid var(--alrite-green);
  transform: scale(0.95);
}

.comparison-logic-preview {
  height: 0;
  margin: 0 5px 0;
  opacity: 0;
  font-size: 18px;
  color: var(--near-black);
  border: 1px solid transparent;
  transition:
    opacity 0.25s ease,
    margin 0.5s ease,
    padding 0.5s ease,
    height 0.5s ease,
    color 0.5s ease,
    border-radius 0.5s ease,
    background-color 0.5s ease,
    border 0.5s ease;
}

.selected .comparison-logic-preview {
  color: var(--alrite-green);
}

.comparison-logic-preview.active {
  height: 27px;
  /* height of size 18px font is 27px */
  margin: 15px 0 0;
  opacity: 1;
  padding: 10px 0;
  border: 3px solid var(--light-border);
  background-color: transparent;
  border-radius: 10px;
}

.selected .comparison-logic-preview.active {
  margin: 15px 0 15px;
}

.selected .comparison-logic-preview.active {
  border: 3px solid var(--alrite-green);
  background-color: rgba(var(--alrite-rgb), 0.1);
}

.comparison-logic-preview::before,
.comparison-logic-preview::after {
  color: var(--near-black);
  transition: color 0.5s ease, opacity 0.5s ease;
  opacity: 0.5;
}

.selected .comparison-logic-preview::before,
.selected .comparison-logic-preview::after {
  opacity: 1;
}

.comparison-logic-preview::before {
  content: var(--targetValueID) " ";
}

.comparison-logic-preview::after {
  content: " " var(--threshold);
}

::-webkit-scrollbar {
  width: 8px;
  height: 8px
}

::-webkit-scrollbar-track {
  background: none
}

::-webkit-scrollbar-thumb {
  background: var(--light-border);
  border-radius: 6px
}

::-webkit-scrollbar-thumb:hover {
  background: var(--dark-border)
}

@keyframes fade-in {
  0% {
    opacity: 0;
  }

  100% {
    opacity: 1;
  }
}

.hidden {
  display: none;
}

.darkMode #utility-section:not(.minimized),
.darkMode #toggle-menu-button,
.darkMode #go-back-button,
body.darkMode {
  background-color: var(--near-black);
}

body.darkMode {
  --light-green: #27442F;
  --dark-green: #E5F1E8;

  --light-border: #7E7E7E;
  --dark-border: #d1d1d1;
  --light-background: #545454;
}

.darkMode #tooltip,
.darkMode h1,
.darkMode h2,
/* .darkMode h3, */
.darkMode .comparison-logic-preview::before,
.darkMode .comparison-logic-preview::after,
.darkMode .prop-input::before {
  color: white
}

.darkMode #tooltip {
  background-color: var(--light-background);
  border: 1px solid var(--light-border)
}

.darkMode #utility-section::before {
  text-shadow:
    1px 1px 0 var(--near-black),
    1px -1px 0 var(--near-black),
    -1px 1px 0 var(--near-black),
    -1px -1px 0 var(--near-black);
}